name: Docker Build
env:
  STACK_ORCHESTRATOR_REF: "f2fd766f5400fcb9eb47b50675d2e3b1f2753702"
  IPLD_ETH_DB_REF: "be345e0733d2c025e4082c5154e441317ae94cf7"
  GO_ETHEREUM_REF: "2cea7024b4db754e43f36e39eb8d06fa42293df2" # Use the tag, we are going to download the bin not build it.
  IPLD_ETH_SERVER_REF: "1d2508f4b11ad7921fc8f1cda764a9a9f5915b63"

on: [pull_request]
jobs:
  build:
    name: Run docker build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run docker build
        run: make docker-build

  test:
    name: Run unit tests
    env:
      GOPATH: /tmp/go
    runs-on: ubuntu-latest
    steps:
      - name: Create GOPATH
        run: mkdir -p /tmp/go
      - uses: actions/setup-go@v3
        with:
          go-version: "1.18.0"
          check-latest: true
      - uses: actions/checkout@v2
        with:
          path: "./eth-statediff-fill-service"
      - uses: actions/checkout@v2
        with:
          ref: ${{ env.IPLD_ETH_DB_REF }}
          repository: vulcanize/ipld-eth-db
          path: "./ipld-eth-db/"
      - uses: actions/checkout@v2
        with:
          ref: ${{ env.STACK_ORCHESTRATOR_REF }}
          path: "./stack-orchestrator/"
          repository: vulcanize/stack-orchestrator
      - name: Create config file
        run: |
          echo vulcanize_ipld_eth_db=$GITHUB_WORKSPACE/ipld-eth-db/ >> ./config.sh
          cat ./config.sh
      - name: Run docker compose
        run: |
          docker-compose  \
          -f "$GITHUB_WORKSPACE/stack-orchestrator/docker/local/docker-compose-db-sharding.yml" \
          --env-file "$GITHUB_WORKSPACE/config.sh" \
          up -d --build
      - name: Test
        run: |
          sleep 10
          cd $GITHUB_WORKSPACE/eth-statediff-fill-service
          PGPASSWORD=password DATABASE_USER=vdbm DATABASE_PORT=8077 DATABASE_PASSWORD=password DATABASE_HOSTNAME=127.0.0.1 DATABASE_NAME=vulcanize_testing make test

  integrationtest:
    name: Run integration tests
    env:
      GOPATH: /tmp/go
      DB_WRITE: true
      ETH_FORWARD_ETH_CALLS: false
      ETH_PROXY_ON_ERROR: false
      ETH_HTTP_PATH: "go-ethereum:8545"
      WATCHED_ADDRESS_GAP_FILLER_INTERVAL: 5
    runs-on: ubuntu-latest
    steps:
      - name: Create GOPATH
        run: mkdir -p /tmp/go
      - uses: actions/setup-go@v3
        with:
          go-version: ">=1.18.0"
          check-latest: true
      - uses: actions/checkout@v2
        with:
          path: "./eth-statediff-fill-service"
      - uses: actions/checkout@v2
        with:
          ref: ${{ env.STACK_ORCHESTRATOR_REF }}
          path: "./stack-orchestrator/"
          repository: vulcanize/stack-orchestrator
      - uses: actions/checkout@v2
        with:
          ref: ${{ env.IPLD_ETH_DB_REF }}
          repository: vulcanize/ipld-eth-db
          path: "./ipld-eth-db/"
      - uses: actions/checkout@v2
        with:
          ref: ${{ env.IPLD_ETH_SERVER_REF }}
          repository: vulcanize/ipld-eth-server
          path: "./ipld-eth-server/"
      - name: Create config file
        run: |
          echo vulcanize_go_ethereum=$GITHUB_WORKSPACE/go-ethereum/ > ./config.sh
          echo vulcanize_ipld_eth_server=$GITHUB_WORKSPACE/ipld-eth-server/ >> ./config.sh
          echo vulcanize_test_contract=$GITHUB_WORKSPACE/ipld-eth-server/test/contract/ >> ./config.sh
          echo vulcanize_eth_statediff_fill_service=$GITHUB_WORKSPACE/eth-statediff-fill-service/ >> ./config.sh
          echo vulcanize_ipld_eth_db=$GITHUB_WORKSPACE/ipld-eth-db/ >> ./config.sh
          echo db_write=$DB_WRITE >> ./config.sh
          echo eth_forward_eth_calls=$ETH_FORWARD_ETH_CALLS >> ./config.sh
          echo eth_proxy_on_error=$ETH_PROXY_ON_ERROR >> ./config.sh
          echo eth_http_path=$ETH_HTTP_PATH >> ./config.sh
          echo watched_address_gap_filler_interval=$WATCHED_ADDRESS_GAP_FILLER_INTERVAL >> ./config.sh
          cat ./config.sh
      - uses: actions/checkout@v2
        with:
          ref: ${{ inputs.GO_ETHEREUM_REF }}
          repository: vulcanize/go-ethereum
          path: "./go-ethereum/"
      - name: Build geth
        run: |
          cd $GITHUB_WORKSPACE/stack-orchestrator/helper-scripts
          ./compile-geth.sh \
          -p "$GITHUB_WORKSPACE/config.sh" \
          -e docker
      #- name: Download Geth geth
      #  run: |
      #    cd $GITHUB_WORKSPACE/stack-orchestrator/helper-scripts
      #    wget https://github.com/vulcanize/go-ethereum/releases/download/${{env.GO_ETHEREUM_REF}}/geth-linux-amd64
      - name: Run docker compose
        run: |
          docker-compose  \
          -f "$GITHUB_WORKSPACE/stack-orchestrator/docker/local/docker-compose-db-sharding.yml" \
          -f "$GITHUB_WORKSPACE/stack-orchestrator/docker/local/docker-compose-go-ethereum.yml" \
          -f "$GITHUB_WORKSPACE/stack-orchestrator/docker/local/docker-compose-ipld-eth-server.yml" \
          -f "$GITHUB_WORKSPACE/stack-orchestrator/docker/local/docker-compose-contract.yml" \
          -f "$GITHUB_WORKSPACE/stack-orchestrator/docker/local/docker-compose-eth-statediff-fill-service.yml" \
          --env-file "$GITHUB_WORKSPACE/config.sh" \
          up -d --build
      - name: Test
        run: |
          cd $GITHUB_WORKSPACE/eth-statediff-fill-service
          while [ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:8081)" != "200" ]; do echo "waiting for ipld-eth-server..." && sleep 5; done && \
          while [ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:8545)" != "200" ]; do echo "waiting for geth-statediff..." && sleep 5; done && \
          make integrationtest
      - name: Dump docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v1
